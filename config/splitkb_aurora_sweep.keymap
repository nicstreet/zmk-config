/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
    #define BASE 0
    #define NAV 1
    #define NUM 2
    #define SYM 3
    #define FUN 4
    #define MAC 5
		#define SET 6
// -----------------

&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    behaviors {

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hl: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT)>;
        };

        sptab: space_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_TAB";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp TAB>;
            mods = <(MOD_LSFT)>;
        };

        bsdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BKSP>, <&kp DEL>;
            mods = <(MOD_LSFT)>;
        };

        entps: enter_printscreen {
            compatible = "zmk,behavior-mod-morph";
            label = "ENTER_PRINTSCREEN";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp PSCRN>;
            mods = <(MOD_LSFT)>;
        };

        comsc: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp CMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT)>;
        };

        dotco: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT)>;
        };
    };
};

ZMK_MACRO(kvm01,
    wait-ms = <30>;
    tap-ms = <40>;
    bindings = <&kp SLCK &kp SLCK &kp KP_N1>;
)
ZMK_MACRO(kvm02,   wait-ms = <30>; tap-ms = <40>; bindings = <&kp SLCK &kp SLCK &kp KP_N2>; )
ZMK_MACRO(kvm03,   wait-ms = <30>; tap-ms = <40>; bindings = <&kp SLCK &kp SLCK &kp KP_N3>; )
ZMK_MACRO(kvm04,   wait-ms = <30>; tap-ms = <40>; bindings = <&kp SLCK &kp SLCK &kp KP_N4>; )
ZMK_MACRO(macro01, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro02, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro03, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro04, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro05, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro06, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro07, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro08, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro09, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )
ZMK_MACRO(macro10, wait-ms = <30>; tap-ms = <40>; bindings = <&kp LS(M) &kp O>; )

    #define COMBO(NAME, BINDINGS, KEYPOS) \
      combo_##NAME { \
        timeout-ms = <50>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <0>; \
      };

/ {
    combos {
      compatible = "zmk,combos";
      COMBO(combo_cut,           &kp LC(X),    1 11)
      COMBO(combo_copy,          &kp LC(C),    2 12)
      COMBO(combo_paste,         &kp LC(V),    3 13)
      COMBO(combo_selectall,     &kp LC(A),    0 10)
      COMBO(combo_backslash,     &kp BSLH,     10 20)
      COMBO(combo_forwardslash,  &kp FSLH,     19 29)
      COMBO(combo_undo,          &kp LC(Z),    13 23)
      COMBO(combo_redo,          &kp LC(Y),    12 22)
      COMBO(combo_quote,         &kp SQT,      6 16)
      COMBO(combo_exclamation,   &kp EXCL,     7 17)
      COMBO(combo_at,            &kp AT,       8 18)
      COMBO(combo_underscore,    &kp MINUS,    16 17)
    };
};

/ {
    keymap {
      compatible = "zmk,keymap";

      default_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &gresc        &kp W         &kp F         &kp P         &kp B                &kp J         &kp L         &kp U         &kp Y         &sl MAC
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &hm LCTL A    &hm LALT R    &lt NAV S     &lt NUM T     &hm LGUI G           &hm LGUI M    &lt FUN N     &lt SYM E     &hm LALT I    &hm LCTL O
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp Z         &comsc        &kp C         &kp D         &kp V                &kp K         &kp H         &kp X         &dotco        &kp Q
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
            				                                 &bsdel        &kp LSFT             &sptab        &entps
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

      nav_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &trans        &trans        &kp PG_UP     &trans		            &trans        &kp HOME      &kp UP        &kp END       &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &kp PG_DN     &trans 	            &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &trans        &trans     	        &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

  		num_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &kp CARET     &kp ASTRK     &kp PLUS      &trans		            &kp PERCENT   &kp N7        &kp N8        &kp N9        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &kp FSLH      &trans        &kp EQUAL	          &kp DOT       &kp N4        &kp N5        &kp N6        &kp N0
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &kp MINUS     &trans       	      &kp NUBS      &kp N1        &kp N2        &kp N3        &kp NUBS
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

  		sym_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &kp TILDE     &kp LBRC      &kp RBRC      &trans	  	          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &kp HASH      &kp LPAR      &kp RPAR      &trans 	            &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &kp DLLR      &kp LBRC      &kp RBRC      &trans 	            &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

      fun_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &kp F1        &kp F2        &kp F3        &kp F4        &kp KP_NLCK          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp F5        &kp F6        &kp F7        &kp F8        &kp CAPS  	          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp F9        &kp F10       &kp F11       &kp F12       &kp SLCK             &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                     &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };

      mac_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &kvm01        &kvm02        &kvm03        &kvm04        &trans               &sl SET       &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  	       &macro01      &macro02      &macro03      &macro04      &macro05             &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  		     &macro06      &macro07      &macro08      &macro09      &macro10             &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
  					                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };

      settings_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  	       &trans        &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  		     &trans        &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
  					                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };
	  };
};
