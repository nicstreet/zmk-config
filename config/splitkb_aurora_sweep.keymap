/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitions
    #define BASE 0
    #define NAV 1
    #define NUM 2
    #define SYM 3
    #define FUN 4
    #define MAC 5
		#define SETTINGS 6
// -----------------

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };


       combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };



    };

        keymap {
                compatible = "zmk,keymap";

    default_layer {
		bindings = <
		&kp Esc &kp W &kp F &kp P &kp B &kp J &kp L &kp U &kp Y &mo MAC
		&kp A &kp R &kp S &kp T &kp G &kp M &kp N &kp E &kp I &kp O
		&kp Z &kp CMMA &kp C &kp D &kp V &kp K &kp H &kp X &kp DOT &kt Q
          				&kp BKSP &kp LSFT  				&kp SPC &kp RET
		>;
		};

    nav_layer {
		bindings = <
		&trans &trans &trans &kp PG_UP &trans		&trans &kp HOME &kp UP &kp END &trans
		&trans &trans &trans &kp PG_DN &trans 	&trans &KP LEFT &KP DOWN &kp RIGHT &trans
		&trans &trans &trans &trans &trans     	&trans &trans &trans &trans &trans
					  &trans &trans    &trans &trans
		>;
		};

		num_layer {
		bindings = <
    &trans &kp CARET &kp ASTRK &kp PLUS &trans		&kp PERCENT &kp N7 &kp N8 &kp N9 &trans
		&trans &trans &kp FSLH &trans &kp EQUAL	      &kp DOT &kp N4 &kp N5 &kp N6 &kp N0
		&trans &trans &trans &kp MINUS &trans       	&kp NUBS &kp N1 &kp N2 &kp N3 &kp NUBS
					  &trans &trans    &trans &trans
		>;
		};

		sym_layer {
		bindings = <
    &trans &kp TILDE &kp LBRC &kp RBRC &trans	  	&trans &trans &trans &trans &trans
		&trans &kp HASH &kp LPAR &kp RPAR &trans 	    &trans &trans &trans &trans &trans
		&trans &kp DLLR &kp LBRC &kp RBRC &trans 	    &trans &trans &trans &trans &trans
					  &trans &trans    &trans &trans
		>;
		};

    fun_layer {
    bindings = <
    &kp F1 &kp F2 &kp F3 &kp F4 &kp KP_NLCK       &trans &trans &trans &trans &trans
		&kp F5 &kp F6 &kp F7 &kp F8 &kp CAPS  	      &trans &trans &trans &trans &trans
		&kp F9 &kp F10 &kp F11 &kp F12 &kp SLCK       &trans &trans &trans &trans &trans
				    &trans &trans   &trans &trans
    >;
    };

    mac_layer {
    bindings = <
    &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
	  &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
		&trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
					    &trans &trans   &trans &trans
    >;
    };

    settings_layer {
    bindings = <
    &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
	  &trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
		&trans &trans &trans &trans &trans            &trans &trans &trans &trans &trans
					    &trans &trans   &trans &trans
    >;
    };

	};
};
