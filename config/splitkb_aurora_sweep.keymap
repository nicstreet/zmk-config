/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 * sources:
 * https://github.com/CrossR/zmk_config - Macro configuration
 * https://joshinator.de/posts/zmk-combo-helper/ - Combo configuration
 */

/* Key Positions
╭────┬────┬────┬────┬────╮      ╭────┬────┬────┬────┬────╮
  00   01   02   03   04          05   06   07   08   09
├────┼────┼────┼────┼────┤      ├────┼────┼────┼────┼────┤
  10   11   12   13   14          15   16   17   18   19
├────┼────┼────┼────┼────┤      ├────┼────┼────┼────┼────┤
  20   21   22   23   24          25   26   27   28   29
╰────┴────┴────┼────┼────┤      ├────┼────┼────┴────┴────╯
                 30   31          32   33
               ╰────┴────╯      ╰────┴────╯
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

// Configure LEDs to include per key LED. Six underglow plus seventeen per key
    &led_strip { chain-length = <23>; };
// -----------------

// Layer definitions
    #define BASE 0
    #define NAV 1
    #define NUM 2
    #define SYM 3
    #define FUN 4
    #define MAC 5
		#define STG 6
// -----------------

// RGB Definitions
    #define RGB_FX_UP    &rgb_ug RGB_EFF
    #define RGB_FX_DN    &rgb_ug RGB_EFR
    #define RGB_SP_UP    &rgb_ug RGB_SPI
    #define RGB_SP_DN    &rgb_ug RGB_SPD
    #define RGB_BR_UP    &rgb_ug RGB_BRI
    #define RGB_BR_DN    &rgb_ug RGB_BRD
    #define RGB_SA_UP    &rgb_ug RGB_SAI
    #define RGB_SA_DN    &rgb_ug RGB_SAD
    #define RGB_HU_UP    &rgb_ug RGB_HUI
    #define RGB_HU_DN    &rgb_ug RGB_HUD
    #define RGBON        &rgb_ug RGB_ON
    #define RGBOFF       &rgb_ug RGB_OFF
    #define RGBTOG       &rgb_ug RGB_TOG
    #define RGB_RED      &rgb_ug RGB_COLOR_HSB(12,100,100)
    #define RGB_PURP     &rgb_ug RGB_COLOR_HSB(191,0,230)
    #define RGB_PINK     &rgb_ug RGB_COLOR_HSB(191,0,192)
    #define RGB_WHIT     &rgb_ug RGB_COLOR_HSB(0,0,0)
    #define RGB_ORAN     &rgb_ug RGB_COLOR_HSB(255,128,0)
// -----------------

// Key Combination Definitions
    #define CAD         &kp LC(LA(DEL))
// -----------------
/ {
    behaviors {

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
                           5  6  7  8  9
           10 11 12 13    15 16 17 18 19
                          25 26 27 28 29
                 30 31    32 33>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <
            0  1  2  3  4
            10 11 12 13 14    16 17 18 19
            20 21 22 23 24
                     30 31    32 33>;
        };

        hp: homerow_mods_pinkies {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKIES";
            #binding-cells = <2>;
            tapping_term_ms = <350>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hl: homerow_layers {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS";
            #binding-cells = <2>;
            tapping_term_ms = <300>;
            quick-tap-ms = <125>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LSFT)>;
        };

        sptab: space_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "SPACE_TAB";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp TAB>;
            mods = <(MOD_LSFT)>;
        };

        bsdel: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BKSP>, <&kp DEL>;
            mods = <(MOD_LSFT)>;
        };

        entps: enter_printscreen {
            compatible = "zmk,behavior-mod-morph";
            label = "ENTER_PRINTSCREEN";
            #binding-cells = <0>;
            bindings = <&kp ENTER>, <&kp PSCRN>;
            mods = <(MOD_LSFT)>;
        };

        comsc: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_SEMICOLON";
            #binding-cells = <0>;
            bindings = <&kp CMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT)>;
        };

        dotco: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COLON";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT)>;
        };
    };
};

  #define MACRO(NAME, BINDINGS) \
      ZMK_MACRO(NAME, \
      compatible = "zmk,behavior-macro"; \
      wait-ms = <0>; \
      tap-ms = <0>; \
      bindings = <BINDINGS>; \
      )

/ {
    macros {
      MACRO(kvm01,   &kp SLCK &macro_wait_time 100 &kp SLCK &macro_wait_time 100 &kp N1)
      MACRO(kvm02,   &kp SLCK &macro_wait_time 100 &kp SLCK &macro_wait_time 100 &kp N2)
      MACRO(kvm03,   &kp SLCK &macro_wait_time 100 &kp SLCK &macro_wait_time 100 &kp N3)
      MACRO(kvm04,   &kp SLCK &macro_wait_time 100 &kp SLCK &macro_wait_time 100 &kp N4)
      MACRO(macro01, &kp LS(M) &kp O)
      MACRO(macro02, &kp LS(M) &kp O)
      MACRO(macro03, &kp LS(M) &kp O)
      MACRO(macro04, &kp LS(M) &kp O)
      MACRO(macro05, &kp LS(M) &kp O)
      MACRO(macro06, &kp LS(M) &kp O)
      MACRO(macro07, &kp LS(M) &kp O)
      MACRO(macro08, &kp LS(M) &kp O)
      MACRO(macro09, &kp LS(M) &kp O)
      MACRO(macro10, &kp LS(M) &kp O)
      MACRO(macro11, &kp LS(M) &kp O)
      MACRO(macro12, &kp LS(M) &kp O)
      MACRO(macro13, &kp LS(M) &kp O)
      MACRO(macro14, &kp LS(M) &kp O)
      MACRO(macro15, &kp LS(M) &kp O)
      MACRO(macro16, &kp LS(M) &kp O)
      MACRO(macro17, &kp LS(M) &kp O)
      MACRO(macro18, &kp LS(M) &kp O)
      MACRO(macro19, &kp LS(M) &kp O)
      MACRO(macro20, &kp LS(M) &kp O)
    };
};

      #define COMBO(NAME, BINDINGS, KEYPOS) \
        combo_##NAME { \
          timeout-ms = <50>; \
          bindings = <BINDINGS>; \
          key-positions = <KEYPOS>; \
          layers = <0>; \
        };

/ {
    combos {
      compatible = "zmk,combos";
      COMBO(combo_cut,           &kp LC(X),    1 11)
      COMBO(combo_copy,          &kp LC(C),    2 12)
      COMBO(combo_paste,         &kp LC(V),    3 13)
      COMBO(combo_selectall,     &kp LC(A),    0 10)
      COMBO(combo_backslash,     &kp BSLH,     10 20)
      COMBO(combo_forwardslash,  &kp FSLH,     19 29)
      COMBO(combo_undo,          &kp LC(Z),    13 23)
      COMBO(combo_redo,          &kp LC(Y),    12 22)
      COMBO(combo_quote,         &kp SQT,      6 16)
      COMBO(combo_exclamation,   &kp EXCL,     7 17)
      COMBO(combo_at,            &kp AT,       8 18)
      COMBO(combo_underscore,    &kp MINUS,    16 17)
    };
};

/ {
    keymap {
      compatible = "zmk,keymap";

      default_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &gresc        &kp W         &kp F         &kp P         &kp B                &kp J         &kp L         &kp U         &lt STG Y     &sl MAC
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &hp LCTL A    &hml LALT R   &lt NAV S     &lt NUM T     &hml LGUI G          &hmr LGUI M   &lt FUN N     &lt SYM E     &hmr LALT I   &hp LCTL O
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp Z         &comsc        &kp C         &kp D         &kp V                &kp K         &kp H         &kp X         &dotco        &kp Q
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
            				                                 &bsdel        &kp LSFT             &sptab        &entps
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

      nav_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &trans        &trans        &kp PG_UP     &trans		            &trans        &kp HOME      &kp UP        &kp END       &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &kp PG_DN     &trans 	            &trans        &kp LEFT      &kp DOWN      &kp RIGHT     &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &trans        &trans     	        &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

  		num_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &kp CARET     &kp ASTRK     &kp PLUS      &trans		            &kp PERCENT   &kp N7        &kp N8        &kp N9        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &kp FSLH      &trans        &kp EQUAL	          &kp DOT       &kp N4        &kp N5        &kp N6        &kp N0
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &kp MINUS     &trans       	      &kp NUBS      &kp N1        &kp N2        &kp N3        &kp NUBS
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

  		sym_layer {
  		bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &kp TILDE     &kp LBRC      &kp RBRC      &trans	  	          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &kp HASH      &kp LPAR      &kp RPAR      &trans 	            &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &kp DLLR      &kp LBRC      &kp RBRC      &trans 	            &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
      			                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
  		};

      fun_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &kp F1        &kp F2        &kp F3        &kp F4        &kp KP_NLCK          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp F5        &kp F6        &kp F7        &kp F8        &kp CAPS  	          &trans        &trans        &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &kp F9        &kp F10       &kp F11       &kp F12       &kp SLCK             &trans        &trans        &trans        &trans        &trans
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                     &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };

      mac_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &kvm01        &kvm02        &kvm03        &kvm04        &trans               &trans        CAD           &trans        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  	       &macro01      &macro02      &macro03      &macro04      &macro05             &macro11      &macro12      &macro13      &macro14      &macro15
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
  		     &macro06      &macro07      &macro08      &macro09      &macro10             &macro16      &macro17      &macro18      &macro19      &macro20
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
  					                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };

      stg_layer {
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
           &trans        &trans        &trans        &trans        &trans               RGBON         RGBTOG        RGBOFF        &trans        &trans
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           &trans        &trans        &trans        &trans        &trans               RGB_FX_UP     RGB_SP_DN     RGB_BR_UP     RGB_SA_UP     RGB_HU_UP
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
           RGB_RED       RGB_PINK      RGB_PURP      RGB_ORAN      RGB_WHIT             RGB_FX_DN     RGB_SP_DN     RGB_BR_DN     RGB_SA_DN     RGB_HU_DN
      // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
  					                                         &trans        &trans               &trans        &trans
      //                                           ╰─────────────┴─────────────╯      ╰─────────────┴─────────────╯
      >;
      };
	  };
};
